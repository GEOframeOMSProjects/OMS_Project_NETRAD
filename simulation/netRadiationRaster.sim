import static oms3.SimBuilder.instance as OMS3
def home = oms_prj
// start and end date of the simulation
def startDate	=	"2008-07-22 15:00"
def endDate		=	"2008-07-22 15:00"
OMS3.sim {
resource "$oms_prj/lib"
 model( ) {
   components {
        // components to be called: reader input data, net radiation component and writer output data
        "readerShortWave"	"org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "readerUpwelling"	"org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "readerDownwelling"	"org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "netRadiation"		"netRadiation.NetRadiationRasterCase"
        "pathGenerator"		"pathGenerator.PathGenerator"
        "writerNetRadiation""org.jgrasstools.gears.io.rasterwriter.OmsRasterWriter"   
   }
   parameter{
   
        // parameter of the reader components 
        "readerShortWave.file"		"${home}/data/DataRaster/SWRB_raster.asc" 
        "readerUpwelling.file"		"${home}/data/DataRaster/LwrbUpWellingRaster.asc" 
        "readerDownwelling.file"	"${home}/data/DataRaster/LwrbDownWellingRaster.asc" 
        
		// parameter of the net radiation component
        "netRadiation.alfa"			0.6
            
        // parameter of the writing component    
        "writerNetRadiation.file"	"${home}/output/netRadiationRaster.asc" 
   }
    connect {

        "readerShortWave.outRaster"		"netRadiation.inShortwaveGrid"
        "readerUpwelling.outRaster"		"netRadiation.inUpwellingGrid"
        "readerDownwelling.outRaster"	"netRadiation.inDownwellingGrid"
        "netRadiation.outNetRadGrid"	"writerNetRadiation.inRaster"
   }
 }
}


